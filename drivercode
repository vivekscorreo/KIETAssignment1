
///////////????Driver function??????????????????/////////////


int main(){

  ////////////////////////////create genesis node////////////
	GenesisNode root;
	root = createGenesisNode();
	
	/////////////////////////// 5 set of child nodes ///////////
	cout<<" 5 child nodes of Genesis node needed to";
	cout<<" be created do enter data";

	for(int i = 0; i < 5; i++){
		
    normalNodecreation();	
	}

  ///////////////////// child node to particular node //////////////
	string nodeId;
	int i = 0;
	cout<< " Enter node ID ";
	cin>> nodeId;
	while(root.childReferenceNodeId[i++]){
		normalNode node = root.childReferenceNodeId[i-1];
		if(nodeId == node.nodeId){
			normalNodeCreation();	  
		}
	}

  //////////////////// encriypt or decriypt data inside a node////////
  cout<<" Enter the nodeId";
  cin>> nodeId;
	i=0;
  while(root.childReferenceNodeId[i++]!=NULL){
		normalNode node = root.childRefrenceNodeId[i-1];
		if(nodeId == node.nodeId){  
					////// md5() is an inbuilt function in "md5.h" library
					////// which converts the data from:
					////// encrypted form to decrypted form and vice versa.
			cout<< md5(node.hashValue);

    }
	}
  if(!root.childReferenceNodeId[i-1])
		cout<< "Sorry!!! No such node is discovered";

  ////////////////// Verify the node ////////////////////////////////
	
	cout<< "Enter the NodeId and the Node Hash Key";
  cin>> nodeId >> hashKey;
	i=0;
  while(root.childReferenceNodeId[i++]!=NULL){
		normalNode node = root.childRefrenceNodeId[i-1];
		if(nodeId == node.nodeId && hashKey == node.hashKey){  
			printDetails(node);

    }
		else{
      cout<< "Sorry!!! Entered details do not matc hthe credentials:";
			cout<< "Exiting";
			exit(0);
		}
	}
 
 //////////////// edit value of the node ////////////////////////////

	cout<< " Enter nodeId to edit the details:"
	cin>> nodeId;
	i=0;
	while(root.childReferenceNodeId[i++]!=NULL){
		normalNode node = root.childReferenceNodeId[i-1];
		if(nodeId == node.nodeId){  
			crearteNormalNode();

    }
		else{
      cout<< "Sorry!!! Entered details do not match the credentials:";
			cout<< "Exiting";
			exit(0);
		}
	}


	return 0;
}
